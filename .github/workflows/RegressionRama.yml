# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: SNOW custom tasks
on: workflow_dispatch  
jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            - name: Set up JDK 11
              uses: actions/setup-java@v1
              with:
                  java-version: 11
            - name: Cache SonarCloud packages
              uses: actions/cache@v1
              with:
                  path: ~/.sonar/cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar
            - name: Cache Maven packages
              uses: actions/cache@v1
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2
    test:
        name: Test
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            - name: List current directory
              run: ls -a
            - name: Run Tests with Maven
              run: mvn -B test --file pom.xml
            - name: ServiceNow DevOps Sonar Scan Results
            # You may pin to the exact commit or the version.
              uses: ServiceNow/servicenow-devops-sonar@main
              with:
                  # ServiceNow Instance URL
                  instance-url: ${{ secrets.SN_INSTANCE_URL }}
                  # Devops Integration User Name
                  devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
                  # Devops Integration User Password
                  devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
                  # Orchestration Tool Id
                  tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
                  # Github Context
                  context-github: ${{ toJSON(github) }}
                  # Display Name of the Job
                  job-name: 'Test'
                  # Sonar Host URL
                  sonar-host-url: ${{ secrets.SONAR_URL }}
                  # Sonar Project Key
                  sonar-project-key: ${{ secrets.SONAR_PROJECT_KEY }}
            - name: ServiceNow DevOps Unit Test Results
            # You may pin to the exact commit or the version.
              uses: ServiceNow/servicenow-devops-test-report@main
              with:
                  # Devops Integration User Name
                  devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
                  # Devops Integration User Password
                  devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
                  # ServiceNow Instance Name
                  instance-url: ${{ secrets.SN_INSTANCE_URL }}
                  # Orchestration Tool Id
                  tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
                  # Job Name
                  job-name: 'Test'
                  # Github Context
                  context-github: ${{ toJSON(github) }}
                  # JUnit xml report file name with path
                  xml-report-filename: target/surefire-reports/testng-results.xml
                  # GitHub Custom Action
                  test-type: # optional, default is JUnit
    integrationTest:
        name: Integration Tests
        needs: test
        runs-on: ubuntu-latest
        steps:  
            - name: ServiceNow DevOps Register Artifact
            # You may pin to the exact commit or the version.
              uses: ServiceNow/servicenow-devops-register-artifact@main
              with:
                  # Devops Integration User Name
                  devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
                  # Devops Integration User Password
                  devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
                  # ServiceNow Instance URL
                  instance-url: ${{ secrets.SN_INSTANCE_URL }}
                  # Orchestration Tool Id
                  tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
                  # Display Name of the Job
                  job-name: 'Integration Tests'
                  # Github Context
                  context-github: ${{ toJSON(github) }}
                  # List of Artifacts to be registered
                  artifacts: '[
                      {
                          "name": "app-devops.jar",
                          "version": "1.${{ github.run_number }}",
                          "semanticVersion": "1.${{ github.run_number }}.0",
                          "repositoryName": "${{ github.repository }}"
                      }
                  ]'
            - name: ServiceNow DevOps Register Package
            # You may pin to the exact commit or the version.
              uses: ServiceNow/servicenow-devops-register-package@main
              with:
                  # ServiceNow Devops Integration User Name
                  devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
                  # ServiceNow Devops Integration User Password
                  devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
                  # ServiceNow Instance URL
                  instance-url: ${{ secrets.SN_INSTANCE_URL }}
                  # Orchestration Tool Id of the tool created in ServiceNow
                  tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
                  # Github Context
                  context-github: ${{ toJSON(github) }}
                  # List of Artifacts in JSON format
                  artifacts: '[
                      {
                          "name": "app-devops.jar",
                          "version": "1.${{ github.run_number }}",
                          "semanticVersion": "1.${{ github.run_number }}.0",
                          "repositoryName": "${{ github.repository }}"
                      }
                  ]'
                  # Name of the Package that contains list of artifacts
                  package-name: 'app-devops-change-velocity.war'
                  # Display Name of Job
                  job-name: 'Integration Tests'
    deploy:
        name: Deploy
        needs: integrationTest
        runs-on: ubuntu-latest
        steps:     
            - name: ServiceNow DevOps Change Automation
            # You may pin to the exact commit or the version.
              uses: ServiceNow/servicenow-devops-change@vmain
              with:
                  # ServiceNow Instance URL
                  instance-url: ${{ secrets.SN_INSTANCE_URL }}
                  # Devops Integration User Name
                  devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
                  # Devops Integration User Password
                  devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
                  # Orchestration Tool Id
                  tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
                  # Display Name of the Job
                  job-name: 'Deploy'
                  # Github Context
                  context-github: ${{ toJSON(github) }}
                  # The max. time in seconds to wait until the action should fail.
                  timeout: # optional, default is 3600
                  # The time in seconds to wait between trying the API.
                  interval: # optional, default is 100
                  # The customized inputs to create change with the requested details.
                  change-request: '{
                      "setCloseCode": "true",
                      "attributes": {
                          "short_description": "Automated Software Deployment",
                          "description": "Automated Software Deployment.",
                          "assignment_group": "a715cd759f2002002920bde8132e7018",
                          "implementation_plan": "Software update is tested and results can be found in Test Summaries Tab.",
                          "backout_plan": "When software fails in production, the previous software release will be re-deployed.",
                          "test_plan": "Testing if the software was successfully deployed"
                      }
                  }'
            - name: Run deployment scripts
              run: echo Completed Deployment
