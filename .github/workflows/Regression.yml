# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: SNOW custom tasks Regression
on: workflow_dispatch  
jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            - name: Set up JDK 11
              uses: actions/setup-java@v1
              with:
                  java-version: 11
            - name: Cache SonarCloud packages
              uses: actions/cache@v1
              with:
                  path: ~/.sonar/cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar
            - name: Cache Maven packages
              uses: actions/cache@v1
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2
    test:
        name: Test
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            - name: List current directory
              run: ls -a
            - name: Run Tests with Maven
              run: mvn -B test --file pom.xml
            # - name: Sonar Cloud Analysis
            #   if: success() # always() failure() success()
            #   run: >
            #         mvn -B verify -DskipTests sonar:sonar
            #         -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            #         -Dsonar.organization=${{ secrets.SONAR_ORG_KEY }}
            #         -Dsonar.host.url=${{ secrets.SONAR_URL }}
            #         -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            #   env:
            #         GITHUB_TOKEN: ${{ secrets.GHP_TOKEN }}
            #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            #         SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
            #         SONAR_URL: ${{ secrets.SONAR_URL }}
            #         SONAR_ORG_KEY: ${{ secrets.SONAR_ORG_KEY }}
            
            - name: ServiceNow DevOps Sonar Scan Results
              uses: ServiceNow/servicenow-devops-sonar@dev
              with:
                  devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
                  devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
                  instance-url: ${{ secrets.SN_INSTANCE_URL }}
                  tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
                  job-name: 'test'
                  context-github: ${{ toJSON(github) }}
                  sonar-host-url: ${{ secrets.SONAR_URL }}
                  sonar-project-key: ${{ secrets.SONAR_PROJECT_KEY }}
      
            # - name: ServiceNow DevOps Unit Test Results
            # # You may pin to the exact commit or the version.
            #   uses: ServiceNow/servicenow-devops-test-report@dev
            #   with:
            #       # Devops Integration User Name
            #       devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
            #       # Devops Integration User Password
            #       devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
            #       # ServiceNow Instance Name
            #       instance-url: ${{ secrets.SN_INSTANCE_URL }}
            #       # Orchestration Tool Id
            #       tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
            #       # Job Name
            #       job-name: 'Test'
            #       # Github Context
            #       context-github: ${{ toJSON(github) }}
            #       # JUnit xml report file name with path
            #       xml-report-filename: target/surefire-reports/testng-results.xml
            #       # GitHub Custom Action
            #       test-type: # optional, default is JUnit
    integrationTest:
        name: Integration Tests
        needs: test
        runs-on: ubuntu-latest
        steps:  

          - name: ServiceNow Register Artifact
            uses: ServiceNow/servicenow-devops-register-artifact@dev
            with:
                      # devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
                      # devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
                      devops-integration-token: ${{ secrets.SN_INSTANCE_TOKEN }}
                      instance-url: ${{ secrets.SN_INSTANCE_URL }}
                      tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
                      context-github: ${{ toJSON(github) }}
                      job-name: 'Integration Tests'
                      artifacts: '[{"name": "com:customactiondemo","version": "1.${{ github.run_number }}","semanticVersion": "1.${{ github.run_number }}.0","repositoryName": "${{ github.repository }}"}]'

          - name: Register Package
            uses: ServiceNow/servicenow-devops-register-package@dev
            with:
              # devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
              # devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
              devops-integration-token: ${{ secrets.SN_INSTANCE_TOKEN }}
              instance-url: ${{ secrets.SN_INSTANCE_URL }}
              tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
              context-github: ${{ toJSON(github) }}
              job-name: 'Integration Tests'
              artifacts: ' [{"name": "com:customactiondemo","version": "1.${{ github.run_number }}","semanticVersion": "1.${{ github.run_number }}.0","repositoryName": "${{ github.repository }}"}]'
              package-name: 'autoclaim.war'
    deploy:
        name: Deploy
        needs: integrationTest
        runs-on: ubuntu-latest
        steps:     
            - name: ServiceNow DevOps Change Automation
            # You may pin to the exact commit or the version.
              uses: ServiceNow/servicenow-devops-change@dev
              with:
                  # ServiceNow Instance URL
                  instance-url: ${{ secrets.SN_INSTANCE_URL }}
                  # # Devops Integration User Name
                  devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
                  # # Devops Integration User Password
                  devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
                  # Devops Integration User Name
                  # devops-integration-token: ${{ secrets.SN_INSTANCE_TOKEN }}
                  # Orchestration Tool Id
                  tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
                  # Display Name of the Job
                  job-name: 'Deploy'
                  # Github Context
                  context-github: ${{ toJSON(github) }}
                  # The max. time in seconds to wait until the action should fail.
                  timeout: 3600
                  # The time in seconds to wait between trying the API.
                  interval: 5
                  # The customized inputs to create change with the requested details.
                  change-request: '{
                      "setCloseCode": "true",
                      "attributes": {
                          "short_description": "Automated Software Deployment",
                          "description": "Automated Software Deployment.",
                          "assignment_group": "a715cd759f2002002920bde8132e7018",
                          "implementation_plan": "Software update is tested and results can be found in Test Summaries Tab.",
                          "backout_plan": "When software fails in production, the previous software release will be re-deployed.",
                          "test_plan": "Testing if the software was successfully deployed"
                      }
                  }'
            - name: ServiceNow DevOps Get Change
              # You may pin to the exact commit or the version.
              # uses: ServiceNow/servicenow-devops-get-change@0f8b1914adeaec764a4286bdd9cba73ed1c6097f
              uses: ServiceNow/servicenow-devops-get-change@dev
              id: get
              with:
                # ServiceNow Instance URL
                instance-url: ${{ secrets.SN_INSTANCE_URL }}
                # Devops Integration User Name
                # devops-integration-user-name: # optional
                # # Devops Integration User Password
                # devops-integration-user-password: # optional
                # Devops Integration Token
                devops-integration-token: ${{ secrets.SN_INSTANCE_TOKEN }} # optional
                # Orchestration Tool Id
                tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
                # Github Context
                context-github: ${{ toJSON(github) }}
                # The inputs to identify change at Servicenow and GET it.
                change-details: '{"build_number":"","pipeline_name":"","stage_name":"Deploy"}'

            - name: Output of GET change
              run: echo "change-request-number = ${{ steps.get.outputs.change-request-number }}" >> $GITHUB_OUTPUT
         
            - name: Checkout
              uses: actions/checkout@v3
        
            - name: Custom Action UPDATE
              uses:  ServiceNow/servicenow-devops-update-change@dev   
                # Uses an action in the root directory
              id: update
              with:
                change-request-number: ${{steps.get.outputs.change-request-number}}# Active CR
                devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
                devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
                instance-url: ${{ secrets.SN_INSTANCE_URL }}
                context-github: ${{ toJSON(github) }}
                change-request-details: '{ "work_notes":"Updated work_notes abcdefghijklmnopqrstuvwxyz","short_description":"Updated short_description abcdefghijklmnopqrstuvwxyz","description":"Updated description abcdefghijklmnopqrstuvwxyz", "close_code":"successful", "close_notes":"Updated close_notes abcdefghijklmnopqrstuvwxyz"}' #Working Version
         
          
            - name: Run deployment scripts
              run: echo Completed Deployment
